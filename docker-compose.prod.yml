services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json:rw
    networks:
      - web
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.leresolver.acme.email=talkcompiler@gmail.com"
      - "--certificatesresolvers.leresolver.acme.storage=/acme.json"

  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: nextjs-app
    restart: always
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://api.futurprive.com
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`futurprive.com`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=leresolver"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"

  postgres:
    image: postgres:14-alpine
    container_name: postgres-db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - web

  django:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: django-app
    restart: always
    command: >-
      sh -c "/app/entrypoint.sh"
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=postgres
      - DATABASE_PORT=${DATABASE_PORT}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - EMAIL_TIMEOUT=${EMAIL_TIMEOUT}
      - SERVER_EMAIL=${SERVER_EMAIL}
      - SITE_URL=${SITE_URL}
    networks:
      - web
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`api.futurprive.com`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=leresolver"
      - "traefik.http.services.django.loadbalancer.server.port=8000"

networks:
  web:

volumes:
  postgres_data:
  static_data:
  media_data: